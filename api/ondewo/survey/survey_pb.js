// source: ondewo/survey/survey.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = function () {
	return this || window || global || self || Function('return this')();
}.call(null);

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.ondewo.survey.AgentSurveyRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.AgentSurveyResponse', null, global);
goog.exportSymbol('proto.ondewo.survey.Answer', null, global);
goog.exportSymbol('proto.ondewo.survey.Answer.IsAnonymousCase', null, global);
goog.exportSymbol('proto.ondewo.survey.Answer.UserInfo', null, global);
goog.exportSymbol('proto.ondewo.survey.Choice', null, global);
goog.exportSymbol('proto.ondewo.survey.CreateSurveyRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.DeleteSurveyRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.GetAllSurveyAnswersRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.GetSurveyAnswersRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.GetSurveyAnswersRequest.IdentifierCase', null, global);
goog.exportSymbol('proto.ondewo.survey.GetSurveyRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.ListSurveysRequest', null, global);
goog.exportSymbol('proto.ondewo.survey.ListSurveysResponse', null, global);
goog.exportSymbol('proto.ondewo.survey.MultipleChoiceQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.MultipleParameterQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.OpenQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.Question', null, global);
goog.exportSymbol('proto.ondewo.survey.Question.QuestionCase', null, global);
goog.exportSymbol('proto.ondewo.survey.ScaleQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.ScaleQuestion.ScaleValue', null, global);
goog.exportSymbol('proto.ondewo.survey.SingleChoiceQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.SingleParameterQuestion', null, global);
goog.exportSymbol('proto.ondewo.survey.SubFlow', null, global);
goog.exportSymbol('proto.ondewo.survey.Survey', null, global);
goog.exportSymbol('proto.ondewo.survey.Survey.AgentStatus', null, global);
goog.exportSymbol('proto.ondewo.survey.SurveyAnswersResponse', null, global);
goog.exportSymbol('proto.ondewo.survey.SurveyInfo', null, global);
goog.exportSymbol('proto.ondewo.survey.UpdateSurveyRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.Survey = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.Survey.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.Survey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.Survey.displayName = 'proto.ondewo.survey.Survey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.SurveyInfo = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.SurveyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.SurveyInfo.displayName = 'proto.ondewo.survey.SurveyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.Question = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ondewo.survey.Question.oneofGroups_);
};
goog.inherits(proto.ondewo.survey.Question, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.Question.displayName = 'proto.ondewo.survey.Question';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.OpenQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.OpenQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.OpenQuestion.displayName = 'proto.ondewo.survey.OpenQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.SingleChoiceQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.SingleChoiceQuestion.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.SingleChoiceQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.SingleChoiceQuestion.displayName = 'proto.ondewo.survey.SingleChoiceQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.MultipleChoiceQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.MultipleChoiceQuestion.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.MultipleChoiceQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.MultipleChoiceQuestion.displayName = 'proto.ondewo.survey.MultipleChoiceQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.ScaleQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.ScaleQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.ScaleQuestion.displayName = 'proto.ondewo.survey.ScaleQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.ScaleQuestion.ScaleValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.ScaleQuestion.ScaleValue.displayName = 'proto.ondewo.survey.ScaleQuestion.ScaleValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.SingleParameterQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.SingleParameterQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.SingleParameterQuestion.displayName = 'proto.ondewo.survey.SingleParameterQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.MultipleParameterQuestion = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.MultipleParameterQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.MultipleParameterQuestion.displayName = 'proto.ondewo.survey.MultipleParameterQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.Choice = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.Choice.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.Choice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.Choice.displayName = 'proto.ondewo.survey.Choice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.Answer = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ondewo.survey.Answer.oneofGroups_);
};
goog.inherits(proto.ondewo.survey.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.Answer.displayName = 'proto.ondewo.survey.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.Answer.UserInfo = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.Answer.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.Answer.UserInfo.displayName = 'proto.ondewo.survey.Answer.UserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.CreateSurveyRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.CreateSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.CreateSurveyRequest.displayName = 'proto.ondewo.survey.CreateSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.GetSurveyRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.GetSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.GetSurveyRequest.displayName = 'proto.ondewo.survey.GetSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.UpdateSurveyRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.UpdateSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.UpdateSurveyRequest.displayName = 'proto.ondewo.survey.UpdateSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.DeleteSurveyRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.DeleteSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.DeleteSurveyRequest.displayName = 'proto.ondewo.survey.DeleteSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.GetSurveyAnswersRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_);
};
goog.inherits(proto.ondewo.survey.GetSurveyAnswersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.GetSurveyAnswersRequest.displayName = 'proto.ondewo.survey.GetSurveyAnswersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.GetAllSurveyAnswersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.GetAllSurveyAnswersRequest.displayName = 'proto.ondewo.survey.GetAllSurveyAnswersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.SurveyAnswersResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.SurveyAnswersResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.SurveyAnswersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.SurveyAnswersResponse.displayName = 'proto.ondewo.survey.SurveyAnswersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.ListSurveysRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.ListSurveysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.ListSurveysRequest.displayName = 'proto.ondewo.survey.ListSurveysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.ListSurveysResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.survey.ListSurveysResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.survey.ListSurveysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.ListSurveysResponse.displayName = 'proto.ondewo.survey.ListSurveysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.AgentSurveyRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.AgentSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.AgentSurveyRequest.displayName = 'proto.ondewo.survey.AgentSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.survey.AgentSurveyResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.survey.AgentSurveyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.ondewo.survey.AgentSurveyResponse.displayName = 'proto.ondewo.survey.AgentSurveyResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.Survey.repeatedFields_ = [7, 9];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.Survey.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.Survey.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.Survey} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.Survey.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, ''),
				displayName: jspb.Message.getFieldWithDefault(msg, 2, ''),
				languageCode: jspb.Message.getFieldWithDefault(msg, 3, ''),
				questionsList: jspb.Message.toObjectList(
					msg.getQuestionsList(),
					proto.ondewo.survey.Question.toObject,
					includeInstance
				),
				surveyInfo: (f = msg.getSurveyInfo()) && proto.ondewo.survey.SurveyInfo.toObject(includeInstance, f),
				excludeSubflowsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
				status: jspb.Message.getFieldWithDefault(msg, 10, 0)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.Survey}
 */
proto.ondewo.survey.Survey.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.Survey();
	return proto.ondewo.survey.Survey.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.Survey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.Survey}
 */
proto.ondewo.survey.Survey.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setDisplayName(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setLanguageCode(value);
				break;
			case 7:
				var value = new proto.ondewo.survey.Question();
				reader.readMessage(value, proto.ondewo.survey.Question.deserializeBinaryFromReader);
				msg.addQuestions(value);
				break;
			case 8:
				var value = new proto.ondewo.survey.SurveyInfo();
				reader.readMessage(value, proto.ondewo.survey.SurveyInfo.deserializeBinaryFromReader);
				msg.setSurveyInfo(value);
				break;
			case 9:
				var values = /** @type {!Array<!proto.ondewo.survey.SubFlow>} */ (
					reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
				);
				for (var i = 0; i < values.length; i++) {
					msg.addExcludeSubflows(values[i]);
				}
				break;
			case 10:
				var value = /** @type {!proto.ondewo.survey.Survey.AgentStatus} */ (reader.readEnum());
				msg.setStatus(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.Survey.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.Survey.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.Survey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.Survey.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getDisplayName();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getLanguageCode();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
	f = message.getQuestionsList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(7, f, proto.ondewo.survey.Question.serializeBinaryToWriter);
	}
	f = message.getSurveyInfo();
	if (f != null) {
		writer.writeMessage(8, f, proto.ondewo.survey.SurveyInfo.serializeBinaryToWriter);
	}
	f = message.getExcludeSubflowsList();
	if (f.length > 0) {
		writer.writePackedEnum(9, f);
	}
	f = message.getStatus();
	if (f !== 0.0) {
		writer.writeEnum(10, f);
	}
};

/**
 * @enum {number}
 */
proto.ondewo.survey.Survey.AgentStatus = {
	TO_BE_INITIALIZED: 0,
	UPDATED: 1,
	UPDATING: 2,
	OUTDATED: 3
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.Survey.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.ondewo.survey.Survey.prototype.getDisplayName = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setDisplayName = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string language_code = 3;
 * @return {string}
 */
proto.ondewo.survey.Survey.prototype.getLanguageCode = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setLanguageCode = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * repeated Question questions = 7;
 * @return {!Array<!proto.ondewo.survey.Question>}
 */
proto.ondewo.survey.Survey.prototype.getQuestionsList = function () {
	return /** @type{!Array<!proto.ondewo.survey.Question>} */ (
		jspb.Message.getRepeatedWrapperField(this, proto.ondewo.survey.Question, 7)
	);
};

/**
 * @param {!Array<!proto.ondewo.survey.Question>} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setQuestionsList = function (value) {
	return jspb.Message.setRepeatedWrapperField(this, 7, value);
};

/**
 * @param {!proto.ondewo.survey.Question=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Question}
 */
proto.ondewo.survey.Survey.prototype.addQuestions = function (opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ondewo.survey.Question, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.clearQuestionsList = function () {
	return this.setQuestionsList([]);
};

/**
 * optional SurveyInfo survey_info = 8;
 * @return {?proto.ondewo.survey.SurveyInfo}
 */
proto.ondewo.survey.Survey.prototype.getSurveyInfo = function () {
	return /** @type{?proto.ondewo.survey.SurveyInfo} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.SurveyInfo, 8)
	);
};

/**
 * @param {?proto.ondewo.survey.SurveyInfo|undefined} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setSurveyInfo = function (value) {
	return jspb.Message.setWrapperField(this, 8, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.clearSurveyInfo = function () {
	return this.setSurveyInfo(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Survey.prototype.hasSurveyInfo = function () {
	return jspb.Message.getField(this, 8) != null;
};

/**
 * repeated SubFlow exclude_subflows = 9;
 * @return {!Array<!proto.ondewo.survey.SubFlow>}
 */
proto.ondewo.survey.Survey.prototype.getExcludeSubflowsList = function () {
	return /** @type {!Array<!proto.ondewo.survey.SubFlow>} */ (jspb.Message.getRepeatedField(this, 9));
};

/**
 * @param {!Array<!proto.ondewo.survey.SubFlow>} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setExcludeSubflowsList = function (value) {
	return jspb.Message.setField(this, 9, value || []);
};

/**
 * @param {!proto.ondewo.survey.SubFlow} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.addExcludeSubflows = function (value, opt_index) {
	return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.clearExcludeSubflowsList = function () {
	return this.setExcludeSubflowsList([]);
};

/**
 * optional AgentStatus status = 10;
 * @return {!proto.ondewo.survey.Survey.AgentStatus}
 */
proto.ondewo.survey.Survey.prototype.getStatus = function () {
	return /** @type {!proto.ondewo.survey.Survey.AgentStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {!proto.ondewo.survey.Survey.AgentStatus} value
 * @return {!proto.ondewo.survey.Survey} returns this
 */
proto.ondewo.survey.Survey.prototype.setStatus = function (value) {
	return jspb.Message.setProto3EnumField(this, 10, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.SurveyInfo.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.SurveyInfo.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.SurveyInfo} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.SurveyInfo.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				legalEntity: jspb.Message.getFieldWithDefault(msg, 1, ''),
				postalAddress: jspb.Message.getFieldWithDefault(msg, 2, ''),
				emailAddress: jspb.Message.getFieldWithDefault(msg, 3, ''),
				phoneNumber: jspb.Message.getFieldWithDefault(msg, 4, ''),
				phoneHours: jspb.Message.getFieldWithDefault(msg, 5, ''),
				expectedDuration: jspb.Message.getFieldWithDefault(msg, 6, ''),
				purpose: jspb.Message.getFieldWithDefault(msg, 7, ''),
				topic: jspb.Message.getFieldWithDefault(msg, 8, ''),
				legalDisclaimer: jspb.Message.getFieldWithDefault(msg, 9, ''),
				anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.SurveyInfo}
 */
proto.ondewo.survey.SurveyInfo.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.SurveyInfo();
	return proto.ondewo.survey.SurveyInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.SurveyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.SurveyInfo}
 */
proto.ondewo.survey.SurveyInfo.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setLegalEntity(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setPostalAddress(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setEmailAddress(value);
				break;
			case 4:
				var value = /** @type {string} */ (reader.readString());
				msg.setPhoneNumber(value);
				break;
			case 5:
				var value = /** @type {string} */ (reader.readString());
				msg.setPhoneHours(value);
				break;
			case 6:
				var value = /** @type {string} */ (reader.readString());
				msg.setExpectedDuration(value);
				break;
			case 7:
				var value = /** @type {string} */ (reader.readString());
				msg.setPurpose(value);
				break;
			case 8:
				var value = /** @type {string} */ (reader.readString());
				msg.setTopic(value);
				break;
			case 9:
				var value = /** @type {string} */ (reader.readString());
				msg.setLegalDisclaimer(value);
				break;
			case 10:
				var value = /** @type {boolean} */ (reader.readBool());
				msg.setAnonymous(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.SurveyInfo.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.SurveyInfo.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.SurveyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.SurveyInfo.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getLegalEntity();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getPostalAddress();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getEmailAddress();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
	f = message.getPhoneNumber();
	if (f.length > 0) {
		writer.writeString(4, f);
	}
	f = message.getPhoneHours();
	if (f.length > 0) {
		writer.writeString(5, f);
	}
	f = message.getExpectedDuration();
	if (f.length > 0) {
		writer.writeString(6, f);
	}
	f = message.getPurpose();
	if (f.length > 0) {
		writer.writeString(7, f);
	}
	f = message.getTopic();
	if (f.length > 0) {
		writer.writeString(8, f);
	}
	f = message.getLegalDisclaimer();
	if (f.length > 0) {
		writer.writeString(9, f);
	}
	f = message.getAnonymous();
	if (f) {
		writer.writeBool(10, f);
	}
};

/**
 * optional string legal_entity = 1;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getLegalEntity = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setLegalEntity = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string postal_address = 2;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getPostalAddress = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setPostalAddress = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string email_address = 3;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getEmailAddress = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setEmailAddress = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string phone_number = 4;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getPhoneNumber = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setPhoneNumber = function (value) {
	return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string phone_hours = 5;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getPhoneHours = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setPhoneHours = function (value) {
	return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string expected_duration = 6;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getExpectedDuration = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setExpectedDuration = function (value) {
	return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string purpose = 7;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getPurpose = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setPurpose = function (value) {
	return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string topic = 8;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getTopic = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setTopic = function (value) {
	return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string legal_disclaimer = 9;
 * @return {string}
 */
proto.ondewo.survey.SurveyInfo.prototype.getLegalDisclaimer = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setLegalDisclaimer = function (value) {
	return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional bool anonymous = 10;
 * @return {boolean}
 */
proto.ondewo.survey.SurveyInfo.prototype.getAnonymous = function () {
	return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};

/**
 * @param {boolean} value
 * @return {!proto.ondewo.survey.SurveyInfo} returns this
 */
proto.ondewo.survey.SurveyInfo.prototype.setAnonymous = function (value) {
	return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ondewo.survey.Question.oneofGroups_ = [[1, 2, 3, 4, 5, 6]];

/**
 * @enum {number}
 */
proto.ondewo.survey.Question.QuestionCase = {
	QUESTION_NOT_SET: 0,
	OPEN_QUESTION: 1,
	SINGLE_CHOICE_QUESTION: 2,
	MULTIPLE_CHOICE_QUESTION: 3,
	SCALE_QUESTION: 4,
	SINGLE_PARAMETER_QUESTION: 5,
	MULTIPLE_PARAMETER_QUESTION: 6
};

/**
 * @return {proto.ondewo.survey.Question.QuestionCase}
 */
proto.ondewo.survey.Question.prototype.getQuestionCase = function () {
	return /** @type {proto.ondewo.survey.Question.QuestionCase} */ (
		jspb.Message.computeOneofCase(this, proto.ondewo.survey.Question.oneofGroups_[0])
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.Question.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.Question.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.Question} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.Question.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				openQuestion: (f = msg.getOpenQuestion()) && proto.ondewo.survey.OpenQuestion.toObject(includeInstance, f),
				singleChoiceQuestion:
					(f = msg.getSingleChoiceQuestion()) && proto.ondewo.survey.SingleChoiceQuestion.toObject(includeInstance, f),
				multipleChoiceQuestion:
					(f = msg.getMultipleChoiceQuestion()) &&
					proto.ondewo.survey.MultipleChoiceQuestion.toObject(includeInstance, f),
				scaleQuestion: (f = msg.getScaleQuestion()) && proto.ondewo.survey.ScaleQuestion.toObject(includeInstance, f),
				singleParameterQuestion:
					(f = msg.getSingleParameterQuestion()) &&
					proto.ondewo.survey.SingleParameterQuestion.toObject(includeInstance, f),
				multipleParameterQuestion:
					(f = msg.getMultipleParameterQuestion()) &&
					proto.ondewo.survey.MultipleParameterQuestion.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.Question}
 */
proto.ondewo.survey.Question.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.Question();
	return proto.ondewo.survey.Question.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.Question} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.Question}
 */
proto.ondewo.survey.Question.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.ondewo.survey.OpenQuestion();
				reader.readMessage(value, proto.ondewo.survey.OpenQuestion.deserializeBinaryFromReader);
				msg.setOpenQuestion(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.SingleChoiceQuestion();
				reader.readMessage(value, proto.ondewo.survey.SingleChoiceQuestion.deserializeBinaryFromReader);
				msg.setSingleChoiceQuestion(value);
				break;
			case 3:
				var value = new proto.ondewo.survey.MultipleChoiceQuestion();
				reader.readMessage(value, proto.ondewo.survey.MultipleChoiceQuestion.deserializeBinaryFromReader);
				msg.setMultipleChoiceQuestion(value);
				break;
			case 4:
				var value = new proto.ondewo.survey.ScaleQuestion();
				reader.readMessage(value, proto.ondewo.survey.ScaleQuestion.deserializeBinaryFromReader);
				msg.setScaleQuestion(value);
				break;
			case 5:
				var value = new proto.ondewo.survey.SingleParameterQuestion();
				reader.readMessage(value, proto.ondewo.survey.SingleParameterQuestion.deserializeBinaryFromReader);
				msg.setSingleParameterQuestion(value);
				break;
			case 6:
				var value = new proto.ondewo.survey.MultipleParameterQuestion();
				reader.readMessage(value, proto.ondewo.survey.MultipleParameterQuestion.deserializeBinaryFromReader);
				msg.setMultipleParameterQuestion(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.Question.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.Question.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.Question} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.Question.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getOpenQuestion();
	if (f != null) {
		writer.writeMessage(1, f, proto.ondewo.survey.OpenQuestion.serializeBinaryToWriter);
	}
	f = message.getSingleChoiceQuestion();
	if (f != null) {
		writer.writeMessage(2, f, proto.ondewo.survey.SingleChoiceQuestion.serializeBinaryToWriter);
	}
	f = message.getMultipleChoiceQuestion();
	if (f != null) {
		writer.writeMessage(3, f, proto.ondewo.survey.MultipleChoiceQuestion.serializeBinaryToWriter);
	}
	f = message.getScaleQuestion();
	if (f != null) {
		writer.writeMessage(4, f, proto.ondewo.survey.ScaleQuestion.serializeBinaryToWriter);
	}
	f = message.getSingleParameterQuestion();
	if (f != null) {
		writer.writeMessage(5, f, proto.ondewo.survey.SingleParameterQuestion.serializeBinaryToWriter);
	}
	f = message.getMultipleParameterQuestion();
	if (f != null) {
		writer.writeMessage(6, f, proto.ondewo.survey.MultipleParameterQuestion.serializeBinaryToWriter);
	}
};

/**
 * optional OpenQuestion open_question = 1;
 * @return {?proto.ondewo.survey.OpenQuestion}
 */
proto.ondewo.survey.Question.prototype.getOpenQuestion = function () {
	return /** @type{?proto.ondewo.survey.OpenQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.OpenQuestion, 1)
	);
};

/**
 * @param {?proto.ondewo.survey.OpenQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setOpenQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 1, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearOpenQuestion = function () {
	return this.setOpenQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasOpenQuestion = function () {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional SingleChoiceQuestion single_choice_question = 2;
 * @return {?proto.ondewo.survey.SingleChoiceQuestion}
 */
proto.ondewo.survey.Question.prototype.getSingleChoiceQuestion = function () {
	return /** @type{?proto.ondewo.survey.SingleChoiceQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.SingleChoiceQuestion, 2)
	);
};

/**
 * @param {?proto.ondewo.survey.SingleChoiceQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setSingleChoiceQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 2, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearSingleChoiceQuestion = function () {
	return this.setSingleChoiceQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasSingleChoiceQuestion = function () {
	return jspb.Message.getField(this, 2) != null;
};

/**
 * optional MultipleChoiceQuestion multiple_choice_question = 3;
 * @return {?proto.ondewo.survey.MultipleChoiceQuestion}
 */
proto.ondewo.survey.Question.prototype.getMultipleChoiceQuestion = function () {
	return /** @type{?proto.ondewo.survey.MultipleChoiceQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.MultipleChoiceQuestion, 3)
	);
};

/**
 * @param {?proto.ondewo.survey.MultipleChoiceQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setMultipleChoiceQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 3, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearMultipleChoiceQuestion = function () {
	return this.setMultipleChoiceQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasMultipleChoiceQuestion = function () {
	return jspb.Message.getField(this, 3) != null;
};

/**
 * optional ScaleQuestion scale_question = 4;
 * @return {?proto.ondewo.survey.ScaleQuestion}
 */
proto.ondewo.survey.Question.prototype.getScaleQuestion = function () {
	return /** @type{?proto.ondewo.survey.ScaleQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.ScaleQuestion, 4)
	);
};

/**
 * @param {?proto.ondewo.survey.ScaleQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setScaleQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 4, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearScaleQuestion = function () {
	return this.setScaleQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasScaleQuestion = function () {
	return jspb.Message.getField(this, 4) != null;
};

/**
 * optional SingleParameterQuestion single_parameter_question = 5;
 * @return {?proto.ondewo.survey.SingleParameterQuestion}
 */
proto.ondewo.survey.Question.prototype.getSingleParameterQuestion = function () {
	return /** @type{?proto.ondewo.survey.SingleParameterQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.SingleParameterQuestion, 5)
	);
};

/**
 * @param {?proto.ondewo.survey.SingleParameterQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setSingleParameterQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 5, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearSingleParameterQuestion = function () {
	return this.setSingleParameterQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasSingleParameterQuestion = function () {
	return jspb.Message.getField(this, 5) != null;
};

/**
 * optional MultipleParameterQuestion multiple_parameter_question = 6;
 * @return {?proto.ondewo.survey.MultipleParameterQuestion}
 */
proto.ondewo.survey.Question.prototype.getMultipleParameterQuestion = function () {
	return /** @type{?proto.ondewo.survey.MultipleParameterQuestion} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.MultipleParameterQuestion, 6)
	);
};

/**
 * @param {?proto.ondewo.survey.MultipleParameterQuestion|undefined} value
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.setMultipleParameterQuestion = function (value) {
	return jspb.Message.setOneofWrapperField(this, 6, proto.ondewo.survey.Question.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Question} returns this
 */
proto.ondewo.survey.Question.prototype.clearMultipleParameterQuestion = function () {
	return this.setMultipleParameterQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Question.prototype.hasMultipleParameterQuestion = function () {
	return jspb.Message.getField(this, 6) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.OpenQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.OpenQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.OpenQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.OpenQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.OpenQuestion}
 */
proto.ondewo.survey.OpenQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.OpenQuestion();
	return proto.ondewo.survey.OpenQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.OpenQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.OpenQuestion}
 */
proto.ondewo.survey.OpenQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.OpenQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.OpenQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.OpenQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.OpenQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.OpenQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.OpenQuestion} returns this
 */
proto.ondewo.survey.OpenQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.SingleChoiceQuestion.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.SingleChoiceQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.SingleChoiceQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.SingleChoiceQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.SingleChoiceQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, ''),
				choicesList: jspb.Message.toObjectList(
					msg.getChoicesList(),
					proto.ondewo.survey.Choice.toObject,
					includeInstance
				)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.SingleChoiceQuestion}
 */
proto.ondewo.survey.SingleChoiceQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.SingleChoiceQuestion();
	return proto.ondewo.survey.SingleChoiceQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.SingleChoiceQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.SingleChoiceQuestion}
 */
proto.ondewo.survey.SingleChoiceQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.Choice();
				reader.readMessage(value, proto.ondewo.survey.Choice.deserializeBinaryFromReader);
				msg.addChoices(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.SingleChoiceQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.SingleChoiceQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.SingleChoiceQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getChoicesList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(2, f, proto.ondewo.survey.Choice.serializeBinaryToWriter);
	}
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SingleChoiceQuestion} returns this
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated Choice choices = 2;
 * @return {!Array<!proto.ondewo.survey.Choice>}
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.getChoicesList = function () {
	return /** @type{!Array<!proto.ondewo.survey.Choice>} */ (
		jspb.Message.getRepeatedWrapperField(this, proto.ondewo.survey.Choice, 2)
	);
};

/**
 * @param {!Array<!proto.ondewo.survey.Choice>} value
 * @return {!proto.ondewo.survey.SingleChoiceQuestion} returns this
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.setChoicesList = function (value) {
	return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.ondewo.survey.Choice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Choice}
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.addChoices = function (opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ondewo.survey.Choice, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.SingleChoiceQuestion} returns this
 */
proto.ondewo.survey.SingleChoiceQuestion.prototype.clearChoicesList = function () {
	return this.setChoicesList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.MultipleChoiceQuestion.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.MultipleChoiceQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.MultipleChoiceQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.MultipleChoiceQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.MultipleChoiceQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, ''),
				choicesList: jspb.Message.toObjectList(
					msg.getChoicesList(),
					proto.ondewo.survey.Choice.toObject,
					includeInstance
				)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.MultipleChoiceQuestion}
 */
proto.ondewo.survey.MultipleChoiceQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.MultipleChoiceQuestion();
	return proto.ondewo.survey.MultipleChoiceQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.MultipleChoiceQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.MultipleChoiceQuestion}
 */
proto.ondewo.survey.MultipleChoiceQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.Choice();
				reader.readMessage(value, proto.ondewo.survey.Choice.deserializeBinaryFromReader);
				msg.addChoices(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.MultipleChoiceQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.MultipleChoiceQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.MultipleChoiceQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getChoicesList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(2, f, proto.ondewo.survey.Choice.serializeBinaryToWriter);
	}
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.MultipleChoiceQuestion} returns this
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated Choice choices = 2;
 * @return {!Array<!proto.ondewo.survey.Choice>}
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.getChoicesList = function () {
	return /** @type{!Array<!proto.ondewo.survey.Choice>} */ (
		jspb.Message.getRepeatedWrapperField(this, proto.ondewo.survey.Choice, 2)
	);
};

/**
 * @param {!Array<!proto.ondewo.survey.Choice>} value
 * @return {!proto.ondewo.survey.MultipleChoiceQuestion} returns this
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.setChoicesList = function (value) {
	return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.ondewo.survey.Choice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Choice}
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.addChoices = function (opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ondewo.survey.Choice, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.MultipleChoiceQuestion} returns this
 */
proto.ondewo.survey.MultipleChoiceQuestion.prototype.clearChoicesList = function () {
	return this.setChoicesList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.ScaleQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.ScaleQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.ScaleQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.ScaleQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, ''),
				minValue: (f = msg.getMinValue()) && proto.ondewo.survey.ScaleQuestion.ScaleValue.toObject(includeInstance, f),
				maxValue: (f = msg.getMaxValue()) && proto.ondewo.survey.ScaleQuestion.ScaleValue.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.ScaleQuestion}
 */
proto.ondewo.survey.ScaleQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.ScaleQuestion();
	return proto.ondewo.survey.ScaleQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.ScaleQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.ScaleQuestion}
 */
proto.ondewo.survey.ScaleQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.ScaleQuestion.ScaleValue();
				reader.readMessage(value, proto.ondewo.survey.ScaleQuestion.ScaleValue.deserializeBinaryFromReader);
				msg.setMinValue(value);
				break;
			case 3:
				var value = new proto.ondewo.survey.ScaleQuestion.ScaleValue();
				reader.readMessage(value, proto.ondewo.survey.ScaleQuestion.ScaleValue.deserializeBinaryFromReader);
				msg.setMaxValue(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.ScaleQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.ScaleQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.ScaleQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.ScaleQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getMinValue();
	if (f != null) {
		writer.writeMessage(2, f, proto.ondewo.survey.ScaleQuestion.ScaleValue.serializeBinaryToWriter);
	}
	f = message.getMaxValue();
	if (f != null) {
		writer.writeMessage(3, f, proto.ondewo.survey.ScaleQuestion.ScaleValue.serializeBinaryToWriter);
	}
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.ScaleQuestion.ScaleValue.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.ScaleQuestion.ScaleValue} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.ScaleQuestion.ScaleValue.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				value: jspb.Message.getFieldWithDefault(msg, 1, 0),
				label: jspb.Message.getFieldWithDefault(msg, 2, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.ScaleQuestion.ScaleValue}
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.ScaleQuestion.ScaleValue();
	return proto.ondewo.survey.ScaleQuestion.ScaleValue.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.ScaleQuestion.ScaleValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.ScaleQuestion.ScaleValue}
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {number} */ (reader.readInt32());
				msg.setValue(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setLabel(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.ScaleQuestion.ScaleValue.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.ScaleQuestion.ScaleValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getValue();
	if (f !== 0) {
		writer.writeInt32(1, f);
	}
	f = message.getLabel();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
};

/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.getValue = function () {
	return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.ondewo.survey.ScaleQuestion.ScaleValue} returns this
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.setValue = function (value) {
	return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string label = 2;
 * @return {string}
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.getLabel = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.ScaleQuestion.ScaleValue} returns this
 */
proto.ondewo.survey.ScaleQuestion.ScaleValue.prototype.setLabel = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.ScaleQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.ScaleQuestion} returns this
 */
proto.ondewo.survey.ScaleQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional ScaleValue min_value = 2;
 * @return {?proto.ondewo.survey.ScaleQuestion.ScaleValue}
 */
proto.ondewo.survey.ScaleQuestion.prototype.getMinValue = function () {
	return /** @type{?proto.ondewo.survey.ScaleQuestion.ScaleValue} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.ScaleQuestion.ScaleValue, 2)
	);
};

/**
 * @param {?proto.ondewo.survey.ScaleQuestion.ScaleValue|undefined} value
 * @return {!proto.ondewo.survey.ScaleQuestion} returns this
 */
proto.ondewo.survey.ScaleQuestion.prototype.setMinValue = function (value) {
	return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.ScaleQuestion} returns this
 */
proto.ondewo.survey.ScaleQuestion.prototype.clearMinValue = function () {
	return this.setMinValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.ScaleQuestion.prototype.hasMinValue = function () {
	return jspb.Message.getField(this, 2) != null;
};

/**
 * optional ScaleValue max_value = 3;
 * @return {?proto.ondewo.survey.ScaleQuestion.ScaleValue}
 */
proto.ondewo.survey.ScaleQuestion.prototype.getMaxValue = function () {
	return /** @type{?proto.ondewo.survey.ScaleQuestion.ScaleValue} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.ScaleQuestion.ScaleValue, 3)
	);
};

/**
 * @param {?proto.ondewo.survey.ScaleQuestion.ScaleValue|undefined} value
 * @return {!proto.ondewo.survey.ScaleQuestion} returns this
 */
proto.ondewo.survey.ScaleQuestion.prototype.setMaxValue = function (value) {
	return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.ScaleQuestion} returns this
 */
proto.ondewo.survey.ScaleQuestion.prototype.clearMaxValue = function () {
	return this.setMaxValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.ScaleQuestion.prototype.hasMaxValue = function () {
	return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.SingleParameterQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.SingleParameterQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.SingleParameterQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.SingleParameterQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, ''),
				parameterType: jspb.Message.getFieldWithDefault(msg, 2, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.SingleParameterQuestion}
 */
proto.ondewo.survey.SingleParameterQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.SingleParameterQuestion();
	return proto.ondewo.survey.SingleParameterQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.SingleParameterQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.SingleParameterQuestion}
 */
proto.ondewo.survey.SingleParameterQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setParameterType(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.SingleParameterQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.SingleParameterQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.SingleParameterQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.SingleParameterQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getParameterType();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.SingleParameterQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SingleParameterQuestion} returns this
 */
proto.ondewo.survey.SingleParameterQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string parameter_type = 2;
 * @return {string}
 */
proto.ondewo.survey.SingleParameterQuestion.prototype.getParameterType = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SingleParameterQuestion} returns this
 */
proto.ondewo.survey.SingleParameterQuestion.prototype.setParameterType = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.MultipleParameterQuestion.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.MultipleParameterQuestion.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.MultipleParameterQuestion} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.MultipleParameterQuestion.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionText: jspb.Message.getFieldWithDefault(msg, 1, ''),
				parameterType: jspb.Message.getFieldWithDefault(msg, 2, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.MultipleParameterQuestion}
 */
proto.ondewo.survey.MultipleParameterQuestion.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.MultipleParameterQuestion();
	return proto.ondewo.survey.MultipleParameterQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.MultipleParameterQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.MultipleParameterQuestion}
 */
proto.ondewo.survey.MultipleParameterQuestion.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setQuestionText(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setParameterType(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.MultipleParameterQuestion.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.MultipleParameterQuestion.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.MultipleParameterQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.MultipleParameterQuestion.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionText();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getParameterType();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
};

/**
 * optional string question_text = 1;
 * @return {string}
 */
proto.ondewo.survey.MultipleParameterQuestion.prototype.getQuestionText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.MultipleParameterQuestion} returns this
 */
proto.ondewo.survey.MultipleParameterQuestion.prototype.setQuestionText = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string parameter_type = 2;
 * @return {string}
 */
proto.ondewo.survey.MultipleParameterQuestion.prototype.getParameterType = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.MultipleParameterQuestion} returns this
 */
proto.ondewo.survey.MultipleParameterQuestion.prototype.setParameterType = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.Choice.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.Choice.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.Choice.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.Choice} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.Choice.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				synonymsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
				followUpQuestion: (f = msg.getFollowUpQuestion()) && proto.ondewo.survey.Question.toObject(includeInstance, f),
				value: jspb.Message.getFieldWithDefault(msg, 3, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.Choice}
 */
proto.ondewo.survey.Choice.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.Choice();
	return proto.ondewo.survey.Choice.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.Choice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.Choice}
 */
proto.ondewo.survey.Choice.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.addSynonyms(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.Question();
				reader.readMessage(value, proto.ondewo.survey.Question.deserializeBinaryFromReader);
				msg.setFollowUpQuestion(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setValue(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.Choice.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.Choice.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.Choice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.Choice.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSynonymsList();
	if (f.length > 0) {
		writer.writeRepeatedString(1, f);
	}
	f = message.getFollowUpQuestion();
	if (f != null) {
		writer.writeMessage(2, f, proto.ondewo.survey.Question.serializeBinaryToWriter);
	}
	f = message.getValue();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
};

/**
 * repeated string synonyms = 1;
 * @return {!Array<string>}
 */
proto.ondewo.survey.Choice.prototype.getSynonymsList = function () {
	return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.setSynonymsList = function (value) {
	return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.addSynonyms = function (value, opt_index) {
	return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.clearSynonymsList = function () {
	return this.setSynonymsList([]);
};

/**
 * optional Question follow_up_question = 2;
 * @return {?proto.ondewo.survey.Question}
 */
proto.ondewo.survey.Choice.prototype.getFollowUpQuestion = function () {
	return /** @type{?proto.ondewo.survey.Question} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.Question, 2)
	);
};

/**
 * @param {?proto.ondewo.survey.Question|undefined} value
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.setFollowUpQuestion = function (value) {
	return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.clearFollowUpQuestion = function () {
	return this.setFollowUpQuestion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Choice.prototype.hasFollowUpQuestion = function () {
	return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string value = 3;
 * @return {string}
 */
proto.ondewo.survey.Choice.prototype.getValue = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Choice} returns this
 */
proto.ondewo.survey.Choice.prototype.setValue = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ondewo.survey.Answer.oneofGroups_ = [[7, 6]];

/**
 * @enum {number}
 */
proto.ondewo.survey.Answer.IsAnonymousCase = {
	IS_ANONYMOUS_NOT_SET: 0,
	ANONYMOUS: 7,
	USER_INFORMATION: 6
};

/**
 * @return {proto.ondewo.survey.Answer.IsAnonymousCase}
 */
proto.ondewo.survey.Answer.prototype.getIsAnonymousCase = function () {
	return /** @type {proto.ondewo.survey.Answer.IsAnonymousCase} */ (
		jspb.Message.computeOneofCase(this, proto.ondewo.survey.Answer.oneofGroups_[0])
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.Answer.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.Answer.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.Answer} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.Answer.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				questionNr: jspb.Message.getFieldWithDefault(msg, 1, 0),
				sessionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
				answerText: jspb.Message.getFieldWithDefault(msg, 3, ''),
				answerParameter: jspb.Message.getFieldWithDefault(msg, 4, ''),
				answerParameterOriginal: jspb.Message.getFieldWithDefault(msg, 5, ''),
				anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
				userInformation:
					(f = msg.getUserInformation()) && proto.ondewo.survey.Answer.UserInfo.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.Answer}
 */
proto.ondewo.survey.Answer.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.Answer();
	return proto.ondewo.survey.Answer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.Answer}
 */
proto.ondewo.survey.Answer.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {number} */ (reader.readInt64());
				msg.setQuestionNr(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setSessionId(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setAnswerText(value);
				break;
			case 4:
				var value = /** @type {string} */ (reader.readString());
				msg.setAnswerParameter(value);
				break;
			case 5:
				var value = /** @type {string} */ (reader.readString());
				msg.setAnswerParameterOriginal(value);
				break;
			case 7:
				var value = /** @type {boolean} */ (reader.readBool());
				msg.setAnonymous(value);
				break;
			case 6:
				var value = new proto.ondewo.survey.Answer.UserInfo();
				reader.readMessage(value, proto.ondewo.survey.Answer.UserInfo.deserializeBinaryFromReader);
				msg.setUserInformation(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.Answer.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.Answer.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.Answer.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getQuestionNr();
	if (f !== 0) {
		writer.writeInt64(1, f);
	}
	f = message.getSessionId();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getAnswerText();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
	f = message.getAnswerParameter();
	if (f.length > 0) {
		writer.writeString(4, f);
	}
	f = message.getAnswerParameterOriginal();
	if (f.length > 0) {
		writer.writeString(5, f);
	}
	f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
	if (f != null) {
		writer.writeBool(7, f);
	}
	f = message.getUserInformation();
	if (f != null) {
		writer.writeMessage(6, f, proto.ondewo.survey.Answer.UserInfo.serializeBinaryToWriter);
	}
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.Answer.UserInfo.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.Answer.UserInfo.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.Answer.UserInfo} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.Answer.UserInfo.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				firstName: jspb.Message.getFieldWithDefault(msg, 1, ''),
				lastName: jspb.Message.getFieldWithDefault(msg, 2, ''),
				phoneNumber: jspb.Message.getFieldWithDefault(msg, 3, ''),
				sessionId: jspb.Message.getFieldWithDefault(msg, 4, ''),
				userId: jspb.Message.getFieldWithDefault(msg, 5, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.Answer.UserInfo}
 */
proto.ondewo.survey.Answer.UserInfo.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.Answer.UserInfo();
	return proto.ondewo.survey.Answer.UserInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.Answer.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.Answer.UserInfo}
 */
proto.ondewo.survey.Answer.UserInfo.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setFirstName(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setLastName(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setPhoneNumber(value);
				break;
			case 4:
				var value = /** @type {string} */ (reader.readString());
				msg.setSessionId(value);
				break;
			case 5:
				var value = /** @type {string} */ (reader.readString());
				msg.setUserId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.Answer.UserInfo.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.Answer.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.Answer.UserInfo.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getFirstName();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getLastName();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getPhoneNumber();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
	f = message.getSessionId();
	if (f.length > 0) {
		writer.writeString(4, f);
	}
	f = message.getUserId();
	if (f.length > 0) {
		writer.writeString(5, f);
	}
};

/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.getFirstName = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer.UserInfo} returns this
 */
proto.ondewo.survey.Answer.UserInfo.prototype.setFirstName = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.getLastName = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer.UserInfo} returns this
 */
proto.ondewo.survey.Answer.UserInfo.prototype.setLastName = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string phone_number = 3;
 * @return {string}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.getPhoneNumber = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer.UserInfo} returns this
 */
proto.ondewo.survey.Answer.UserInfo.prototype.setPhoneNumber = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string session_id = 4;
 * @return {string}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.getSessionId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer.UserInfo} returns this
 */
proto.ondewo.survey.Answer.UserInfo.prototype.setSessionId = function (value) {
	return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.ondewo.survey.Answer.UserInfo.prototype.getUserId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer.UserInfo} returns this
 */
proto.ondewo.survey.Answer.UserInfo.prototype.setUserId = function (value) {
	return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int64 question_nr = 1;
 * @return {number}
 */
proto.ondewo.survey.Answer.prototype.getQuestionNr = function () {
	return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setQuestionNr = function (value) {
	return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.ondewo.survey.Answer.prototype.getSessionId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setSessionId = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string answer_text = 3;
 * @return {string}
 */
proto.ondewo.survey.Answer.prototype.getAnswerText = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setAnswerText = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string answer_parameter = 4;
 * @return {string}
 */
proto.ondewo.survey.Answer.prototype.getAnswerParameter = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setAnswerParameter = function (value) {
	return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string answer_parameter_original = 5;
 * @return {string}
 */
proto.ondewo.survey.Answer.prototype.getAnswerParameterOriginal = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setAnswerParameterOriginal = function (value) {
	return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool anonymous = 7;
 * @return {boolean}
 */
proto.ondewo.survey.Answer.prototype.getAnonymous = function () {
	return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};

/**
 * @param {boolean} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setAnonymous = function (value) {
	return jspb.Message.setOneofField(this, 7, proto.ondewo.survey.Answer.oneofGroups_[0], value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.clearAnonymous = function () {
	return jspb.Message.setOneofField(this, 7, proto.ondewo.survey.Answer.oneofGroups_[0], undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Answer.prototype.hasAnonymous = function () {
	return jspb.Message.getField(this, 7) != null;
};

/**
 * optional UserInfo user_information = 6;
 * @return {?proto.ondewo.survey.Answer.UserInfo}
 */
proto.ondewo.survey.Answer.prototype.getUserInformation = function () {
	return /** @type{?proto.ondewo.survey.Answer.UserInfo} */ (
		jspb.Message.getWrapperField(this, proto.ondewo.survey.Answer.UserInfo, 6)
	);
};

/**
 * @param {?proto.ondewo.survey.Answer.UserInfo|undefined} value
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.setUserInformation = function (value) {
	return jspb.Message.setOneofWrapperField(this, 6, proto.ondewo.survey.Answer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.Answer} returns this
 */
proto.ondewo.survey.Answer.prototype.clearUserInformation = function () {
	return this.setUserInformation(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.Answer.prototype.hasUserInformation = function () {
	return jspb.Message.getField(this, 6) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.CreateSurveyRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.CreateSurveyRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.CreateSurveyRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.CreateSurveyRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				survey: (f = msg.getSurvey()) && proto.ondewo.survey.Survey.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.CreateSurveyRequest}
 */
proto.ondewo.survey.CreateSurveyRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.CreateSurveyRequest();
	return proto.ondewo.survey.CreateSurveyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.CreateSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.CreateSurveyRequest}
 */
proto.ondewo.survey.CreateSurveyRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.ondewo.survey.Survey();
				reader.readMessage(value, proto.ondewo.survey.Survey.deserializeBinaryFromReader);
				msg.setSurvey(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.CreateSurveyRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.CreateSurveyRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.CreateSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.CreateSurveyRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurvey();
	if (f != null) {
		writer.writeMessage(1, f, proto.ondewo.survey.Survey.serializeBinaryToWriter);
	}
};

/**
 * optional Survey survey = 1;
 * @return {?proto.ondewo.survey.Survey}
 */
proto.ondewo.survey.CreateSurveyRequest.prototype.getSurvey = function () {
	return /** @type{?proto.ondewo.survey.Survey} */ (jspb.Message.getWrapperField(this, proto.ondewo.survey.Survey, 1));
};

/**
 * @param {?proto.ondewo.survey.Survey|undefined} value
 * @return {!proto.ondewo.survey.CreateSurveyRequest} returns this
 */
proto.ondewo.survey.CreateSurveyRequest.prototype.setSurvey = function (value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.CreateSurveyRequest} returns this
 */
proto.ondewo.survey.CreateSurveyRequest.prototype.clearSurvey = function () {
	return this.setSurvey(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.CreateSurveyRequest.prototype.hasSurvey = function () {
	return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.GetSurveyRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.GetSurveyRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.GetSurveyRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.GetSurveyRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.GetSurveyRequest}
 */
proto.ondewo.survey.GetSurveyRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.GetSurveyRequest();
	return proto.ondewo.survey.GetSurveyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.GetSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.GetSurveyRequest}
 */
proto.ondewo.survey.GetSurveyRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.GetSurveyRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.GetSurveyRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.GetSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.GetSurveyRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.GetSurveyRequest.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetSurveyRequest} returns this
 */
proto.ondewo.survey.GetSurveyRequest.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.UpdateSurveyRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.UpdateSurveyRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.UpdateSurveyRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.UpdateSurveyRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				survey: (f = msg.getSurvey()) && proto.ondewo.survey.Survey.toObject(includeInstance, f),
				updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.UpdateSurveyRequest}
 */
proto.ondewo.survey.UpdateSurveyRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.UpdateSurveyRequest();
	return proto.ondewo.survey.UpdateSurveyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.UpdateSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.UpdateSurveyRequest}
 */
proto.ondewo.survey.UpdateSurveyRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.ondewo.survey.Survey();
				reader.readMessage(value, proto.ondewo.survey.Survey.deserializeBinaryFromReader);
				msg.setSurvey(value);
				break;
			case 2:
				var value = new google_protobuf_field_mask_pb.FieldMask();
				reader.readMessage(value, google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
				msg.setUpdateMask(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.UpdateSurveyRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.UpdateSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.UpdateSurveyRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurvey();
	if (f != null) {
		writer.writeMessage(1, f, proto.ondewo.survey.Survey.serializeBinaryToWriter);
	}
	f = message.getUpdateMask();
	if (f != null) {
		writer.writeMessage(2, f, google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter);
	}
};

/**
 * optional Survey survey = 1;
 * @return {?proto.ondewo.survey.Survey}
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.getSurvey = function () {
	return /** @type{?proto.ondewo.survey.Survey} */ (jspb.Message.getWrapperField(this, proto.ondewo.survey.Survey, 1));
};

/**
 * @param {?proto.ondewo.survey.Survey|undefined} value
 * @return {!proto.ondewo.survey.UpdateSurveyRequest} returns this
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.setSurvey = function (value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.UpdateSurveyRequest} returns this
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.clearSurvey = function () {
	return this.setSurvey(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.hasSurvey = function () {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.getUpdateMask = function () {
	return /** @type{?proto.google.protobuf.FieldMask} */ (
		jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2)
	);
};

/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.ondewo.survey.UpdateSurveyRequest} returns this
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.setUpdateMask = function (value) {
	return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.survey.UpdateSurveyRequest} returns this
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.clearUpdateMask = function () {
	return this.setUpdateMask(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.UpdateSurveyRequest.prototype.hasUpdateMask = function () {
	return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.DeleteSurveyRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.DeleteSurveyRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.DeleteSurveyRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.DeleteSurveyRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.DeleteSurveyRequest}
 */
proto.ondewo.survey.DeleteSurveyRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.DeleteSurveyRequest();
	return proto.ondewo.survey.DeleteSurveyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.DeleteSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.DeleteSurveyRequest}
 */
proto.ondewo.survey.DeleteSurveyRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.DeleteSurveyRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.DeleteSurveyRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.DeleteSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.DeleteSurveyRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.DeleteSurveyRequest.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.DeleteSurveyRequest} returns this
 */
proto.ondewo.survey.DeleteSurveyRequest.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_ = [[2, 3, 4]];

/**
 * @enum {number}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.IdentifierCase = {
	IDENTIFIER_NOT_SET: 0,
	SESSION_ID: 2,
	USER_ID: 3,
	USER_PHONE_NUMBER: 4
};

/**
 * @return {proto.ondewo.survey.GetSurveyAnswersRequest.IdentifierCase}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.getIdentifierCase = function () {
	return /** @type {proto.ondewo.survey.GetSurveyAnswersRequest.IdentifierCase} */ (
		jspb.Message.computeOneofCase(this, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0])
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.GetSurveyAnswersRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.GetSurveyAnswersRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.GetSurveyAnswersRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.GetSurveyAnswersRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, ''),
				sessionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
				userId: jspb.Message.getFieldWithDefault(msg, 3, ''),
				userPhoneNumber: jspb.Message.getFieldWithDefault(msg, 4, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.GetSurveyAnswersRequest();
	return proto.ondewo.survey.GetSurveyAnswersRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.GetSurveyAnswersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setSessionId(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setUserId(value);
				break;
			case 4:
				var value = /** @type {string} */ (reader.readString());
				msg.setUserPhoneNumber(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.GetSurveyAnswersRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.GetSurveyAnswersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.GetSurveyAnswersRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = /** @type {string} */ (jspb.Message.getField(message, 2));
	if (f != null) {
		writer.writeString(2, f);
	}
	f = /** @type {string} */ (jspb.Message.getField(message, 3));
	if (f != null) {
		writer.writeString(3, f);
	}
	f = /** @type {string} */ (jspb.Message.getField(message, 4));
	if (f != null) {
		writer.writeString(4, f);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.getSessionId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.setSessionId = function (value) {
	return jspb.Message.setOneofField(this, 2, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.clearSessionId = function () {
	return jspb.Message.setOneofField(this, 2, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.hasSessionId = function () {
	return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.getUserId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.setUserId = function (value) {
	return jspb.Message.setOneofField(this, 3, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.clearUserId = function () {
	return jspb.Message.setOneofField(this, 3, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.hasUserId = function () {
	return jspb.Message.getField(this, 3) != null;
};

/**
 * optional string user_phone_number = 4;
 * @return {string}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.getUserPhoneNumber = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.setUserPhoneNumber = function (value) {
	return jspb.Message.setOneofField(this, 4, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.ondewo.survey.GetSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.clearUserPhoneNumber = function () {
	return jspb.Message.setOneofField(this, 4, proto.ondewo.survey.GetSurveyAnswersRequest.oneofGroups_[0], undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.survey.GetSurveyAnswersRequest.prototype.hasUserPhoneNumber = function () {
	return jspb.Message.getField(this, 4) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.GetAllSurveyAnswersRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.GetAllSurveyAnswersRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.GetAllSurveyAnswersRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.GetAllSurveyAnswersRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.GetAllSurveyAnswersRequest}
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.GetAllSurveyAnswersRequest();
	return proto.ondewo.survey.GetAllSurveyAnswersRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.GetAllSurveyAnswersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.GetAllSurveyAnswersRequest}
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.GetAllSurveyAnswersRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.GetAllSurveyAnswersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.GetAllSurveyAnswersRequest} returns this
 */
proto.ondewo.survey.GetAllSurveyAnswersRequest.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.SurveyAnswersResponse.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.SurveyAnswersResponse.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.SurveyAnswersResponse.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.SurveyAnswersResponse} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.SurveyAnswersResponse.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, ''),
				answersList: jspb.Message.toObjectList(
					msg.getAnswersList(),
					proto.ondewo.survey.Answer.toObject,
					includeInstance
				)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.SurveyAnswersResponse}
 */
proto.ondewo.survey.SurveyAnswersResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.SurveyAnswersResponse();
	return proto.ondewo.survey.SurveyAnswersResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.SurveyAnswersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.SurveyAnswersResponse}
 */
proto.ondewo.survey.SurveyAnswersResponse.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			case 2:
				var value = new proto.ondewo.survey.Answer();
				reader.readMessage(value, proto.ondewo.survey.Answer.deserializeBinaryFromReader);
				msg.addAnswers(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.SurveyAnswersResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.SurveyAnswersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.SurveyAnswersResponse.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getAnswersList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(2, f, proto.ondewo.survey.Answer.serializeBinaryToWriter);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.SurveyAnswersResponse} returns this
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated Answer answers = 2;
 * @return {!Array<!proto.ondewo.survey.Answer>}
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.getAnswersList = function () {
	return /** @type{!Array<!proto.ondewo.survey.Answer>} */ (
		jspb.Message.getRepeatedWrapperField(this, proto.ondewo.survey.Answer, 2)
	);
};

/**
 * @param {!Array<!proto.ondewo.survey.Answer>} value
 * @return {!proto.ondewo.survey.SurveyAnswersResponse} returns this
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.setAnswersList = function (value) {
	return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.ondewo.survey.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Answer}
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.addAnswers = function (opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ondewo.survey.Answer, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.SurveyAnswersResponse} returns this
 */
proto.ondewo.survey.SurveyAnswersResponse.prototype.clearAnswersList = function () {
	return this.setAnswersList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.ListSurveysRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.ListSurveysRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.ListSurveysRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.ListSurveysRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				pageToken: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.ListSurveysRequest}
 */
proto.ondewo.survey.ListSurveysRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.ListSurveysRequest();
	return proto.ondewo.survey.ListSurveysRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.ListSurveysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.ListSurveysRequest}
 */
proto.ondewo.survey.ListSurveysRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setPageToken(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.ListSurveysRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.ListSurveysRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.ListSurveysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.ListSurveysRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getPageToken();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string page_token = 1;
 * @return {string}
 */
proto.ondewo.survey.ListSurveysRequest.prototype.getPageToken = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.ListSurveysRequest} returns this
 */
proto.ondewo.survey.ListSurveysRequest.prototype.setPageToken = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.survey.ListSurveysResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.ListSurveysResponse.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.ListSurveysResponse.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.ListSurveysResponse} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.ListSurveysResponse.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveysList: jspb.Message.toObjectList(
					msg.getSurveysList(),
					proto.ondewo.survey.Survey.toObject,
					includeInstance
				),
				nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.ListSurveysResponse}
 */
proto.ondewo.survey.ListSurveysResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.ListSurveysResponse();
	return proto.ondewo.survey.ListSurveysResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.ListSurveysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.ListSurveysResponse}
 */
proto.ondewo.survey.ListSurveysResponse.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.ondewo.survey.Survey();
				reader.readMessage(value, proto.ondewo.survey.Survey.deserializeBinaryFromReader);
				msg.addSurveys(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setNextPageToken(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.ListSurveysResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.ListSurveysResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.ListSurveysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.ListSurveysResponse.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveysList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(1, f, proto.ondewo.survey.Survey.serializeBinaryToWriter);
	}
	f = message.getNextPageToken();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
};

/**
 * repeated Survey surveys = 1;
 * @return {!Array<!proto.ondewo.survey.Survey>}
 */
proto.ondewo.survey.ListSurveysResponse.prototype.getSurveysList = function () {
	return /** @type{!Array<!proto.ondewo.survey.Survey>} */ (
		jspb.Message.getRepeatedWrapperField(this, proto.ondewo.survey.Survey, 1)
	);
};

/**
 * @param {!Array<!proto.ondewo.survey.Survey>} value
 * @return {!proto.ondewo.survey.ListSurveysResponse} returns this
 */
proto.ondewo.survey.ListSurveysResponse.prototype.setSurveysList = function (value) {
	return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.ondewo.survey.Survey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.survey.Survey}
 */
proto.ondewo.survey.ListSurveysResponse.prototype.addSurveys = function (opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ondewo.survey.Survey, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.survey.ListSurveysResponse} returns this
 */
proto.ondewo.survey.ListSurveysResponse.prototype.clearSurveysList = function () {
	return this.setSurveysList([]);
};

/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.ondewo.survey.ListSurveysResponse.prototype.getNextPageToken = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.ListSurveysResponse} returns this
 */
proto.ondewo.survey.ListSurveysResponse.prototype.setNextPageToken = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.AgentSurveyRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.AgentSurveyRequest.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.AgentSurveyRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.AgentSurveyRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				surveyId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.AgentSurveyRequest}
 */
proto.ondewo.survey.AgentSurveyRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.AgentSurveyRequest();
	return proto.ondewo.survey.AgentSurveyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.AgentSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.AgentSurveyRequest}
 */
proto.ondewo.survey.AgentSurveyRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setSurveyId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.AgentSurveyRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.AgentSurveyRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.AgentSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.AgentSurveyRequest.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getSurveyId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string survey_id = 1;
 * @return {string}
 */
proto.ondewo.survey.AgentSurveyRequest.prototype.getSurveyId = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.AgentSurveyRequest} returns this
 */
proto.ondewo.survey.AgentSurveyRequest.prototype.setSurveyId = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.ondewo.survey.AgentSurveyResponse.prototype.toObject = function (opt_includeInstance) {
		return proto.ondewo.survey.AgentSurveyResponse.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.ondewo.survey.AgentSurveyResponse} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.ondewo.survey.AgentSurveyResponse.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				parent: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.survey.AgentSurveyResponse}
 */
proto.ondewo.survey.AgentSurveyResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.ondewo.survey.AgentSurveyResponse();
	return proto.ondewo.survey.AgentSurveyResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.survey.AgentSurveyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.survey.AgentSurveyResponse}
 */
proto.ondewo.survey.AgentSurveyResponse.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setParent(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.survey.AgentSurveyResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.ondewo.survey.AgentSurveyResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.survey.AgentSurveyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.survey.AgentSurveyResponse.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getParent();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string parent = 1;
 * @return {string}
 */
proto.ondewo.survey.AgentSurveyResponse.prototype.getParent = function () {
	return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ondewo.survey.AgentSurveyResponse} returns this
 */
proto.ondewo.survey.AgentSurveyResponse.prototype.setParent = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * @enum {number}
 */
proto.ondewo.survey.SubFlow = {
	SUBFLOW_UNSPECIFIED: 0,
	BOT: 1,
	LEGAL_ENTITY: 2,
	POSTAL_ADDRESS: 3,
	EMAIL_ADDRESS: 4,
	PHONE_NUMBER: 5,
	PHONE_HOURS: 6,
	EXPECTED_DURATION: 7,
	PURPOSE: 8
};

goog.object.extend(exports, proto.ondewo.survey);
